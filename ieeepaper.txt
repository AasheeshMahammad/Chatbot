\documentclass[conference]{IEEEtran}
\IEEEoverridecommandlockouts
% The preceding line is only needed to identify funding in the first footnote. If that is unneeded, please comment it out.
\usepackage{cite}
\usepackage{amsmath,amssymb,amsfonts}
\usepackage{algorithmic}
\usepackage{graphicx}
\usepackage{textcomp}
\usepackage{xcolor}
\def\BibTeX{{\rm B\kern-.05em{\sc i\kern-.025em b}\kern-.08em
    T\kern-.1667em\lower.7ex\hbox{E}\kern-.125emX}}
\begin{document}

\title{ ReBot : A Service Query Chatbot }
\author{\IEEEauthorblockN{Rohith G}
\IEEEauthorblockA{\textit{Computer Science and Engineering} \\
\textit{PES University}\\
Bangalore, India \\
gangadharrohith6@gmail.com}
\and
\IEEEauthorblockN{S Mahammad Aasheesh}
\IEEEauthorblockA{\textit{Computer Science and Engineering} \\
\textit{PES University}\\
Bangalore, India \\
aasheeshmahammad@gmail.com}
\and
\IEEEauthorblockN{S V S C Santosh}
\IEEEauthorblockA{\textit{Computer Science and Engineering} \\
\textit{PES University}\\
Bangalore, India \\
santoshsvsc2002@gmail.com}}
\maketitle
\begin{abstract}
A chatbot is a human like agent giving responses to queries from end-users. With the advancement of technology and due to the rise of internet usage, many businesses now aim to automate the process of handling customer issues.\\
In this paper we build a basic version of a chatbot which would help reduce the workload of the Customer Service cell of a Service-Oriented Company by addressing the common laptop issues in general. If the customer isn’t satisfied with the response, then the chatbot offers to schedule an appointment for them at the nearest service centre and notify them of the issue. The latter process, however, is only simulated.
\end{abstract}

\begin{IEEEkeywords}
 Natural Language Processing, Spellcheck, Supervised Learning 
\end{IEEEkeywords}

\section{Introduction}
Chatbots are widely deployed by companies in order to save manpower and cost in providing support to common customer queries. 

Applications of chatbots are numerous, the most important being customer service, information extraction, routing requests, etc. There are also various kinds of chatbots, ranging from simple, word-matching ones, to sophisticated bots that make extensive use of context with the help of many Natural Language Processing concepts, that might seem to pass the Turing test with flying colours.

Chatbots are not a new development. These are simulations that allow you to understand, process, and interact  with human language while performing specific tasks. For example, you can use a chatbot  as a help desk manager. The first chatbot, called Eliza, was developed by Joseph Wiesenbaum in 1966. It all started when Alan Turing published an article entitled "Computer Machinery and Intelligence" and asked interesting questions. These advances have made conversations with chatbots  as normal and natural as conversations with other humans. There are many types of chatbots, some of which can be categorized as Text-based chatbots and Voice-based chatbots. In text-based chatbots, bots answer user questions through a text interface. In voice or voice-based chatbots, bots answer user questions via a human voice interface. 
There are two main approaches used to design chatbots, namely rule-based and self-learning chatbots. In a rule-based approach, the bot answers questions based on some trained rules. The defined rules can range from very simple to very complex. The bot can handle simple queries, but not complex queries. Self-learning bots use several machine learning-based approaches and are definitely more efficient than rule-based bots. These bots can be further divided into demand-based or generated chatbots. 
Chatbots can also be classified based on their complexity: Traditional, Current and Future Chatbots. Traditional chatbots are controlled by systems and automation. It is primarily controlled through scripts with minimal functionality and the ability to maintain only system context. Current chatbots are enhanced by interactions between the system and humans. You can maintain both the system context and the task context. Future chatbots will be able to communicate at multiple levels with system-level automation. Has the ability to maintain  system, task, and personal context. It may introduce a  master bot and, in some cases, a bot operating system.


\section{Related Work / Literature Survey}
\\

Upto six research papers were reviewed in context of different chatbots and their architecture, and are summarized in the following lines.
\\

The paper by Siddhant Meshram, Tanmay More and others, entails the construction of a chatbot that addresses queries related to college stats such as admission, grades, courses offered, etc. This chatbot is exclusively built using the Rasa Framework - Rasa Core and Rasa NLU. spaCy English language model is chosen. According to the authors, the model distinguishes user input into intents and entities and responds in form of "actions". The ui is a webpage connected to the backend using socketio library. The shortcomings and features yet to be added, such as introduction of voice recognition, support for multilingual features, are highlighted.
\\

The paper by Iqbal Hasan, Sandeep Jain, and others discusses about the development of an AI-enabled virtual assistant (VANI) for providing automatic customer support solutions for various government service-related citizens queries. It uses a framework instrumented using many models and learning algorithms such as Google Dialogflow, Microsoft Bot Framework, Rasa, Amazon Lex and IBM Watson, for intent-context mapping of queries.
\\

The paper by Dana Doherty and Daniel Kelly describes the general architecture of a chatbot.It comprises of four parts: the front-end, the knowledge-base, the back-end and the corpus which is training data. The communication with the user is done on front end part. NLU (natural language understanding) is used to understand the context and intent of the user input. Segregation of chatbot architecture into different interfaces (front-end input, Knowledge base/model, backend or database and front-end output) reduces the overall complexity of the chatbot. 
\\

The paper by Sophia Keyner, Vadim Savenkov, and Svitlana Vakulenko talks about the processing of received input which involves Message interpretation( Entity Recognition, Intent Classification) Dialogue Management and Dialogue Flow. Text input of the chatbot is passed to subjected to entity extraction and intent classification which is a text analysis technique to pull out specific data from text and classify it according to predefined categories. Chat Bot makes an action based on previous entity and intent detected.
\\

The paper by Chunyuan Yuan, Wei Zhou and others propose the thesis that Multi-turn retrieval-based conversation is an important task for building intelligent dialogue systems. Most of the work existing before (SMN) this was focusing mainly on matching the users responses with the context utterances. The main objective of this paper was to reduce the effect of noise due to increasing number of context utterances and propose a solution to tackle the same. Architecture used to achieve the same is an Multi-hop selector Network. The techniques used in this paper are Word and Utterance selector along with Hopk Selector Utterance-Response Matching, Origin Matching, Self Matching, Cross Matching and aggregation.
\\

The paper by Prissadang Suta, Xi Lan and others first provides an overview of chatbots and then focus on research trends regarding the development of human-like chatbots capable of closing this technological gap. Methods used in this paper are Natural Language Understanding (NLU) to categorize the user’s intent, Dialogue Management (DM) to determine user’s intent and Natural Language Generation (NLG) to generate a response in natural language.
\\

\section{Motivation / Scope}
\\

Electronic devices in general and laptops in particular are almost always prone to malfunctioning at some point of their lifetime. It is observed and known that most of the problems that occur in laptops are repetitive and can be addressed under a section similar to frequently asked questions. And not all users will have sufficient prerequisite knowledge to be able to decipher the problem and lookup appropriately on the web for solutions. Building a chatbot would provide a simple, cost-effective solution to both these problems.
\\

A chatbot provides a one-place-many-solutions type of platform where the users can opt to put forth their problems in their own words to the bot, and it would provide a solution or offer to book an appointment at the user's nearest service centre based on the availability of the solution to a given problem. In this way, one can save money and labour required by a substantial degree.
\\

\section{Proposed Methodology}
\\

The programming language chosen to implement this chatbot is python, due to its wide spectrum of available for building and training deep learning models. It also has support for various NLP modules such as nltk, etc.
\\

The project has been divided into many modules (classes) with respect to each one's functionality.
\\

The objective of the Autocorrect class is to autocorrect input words by looking at dictionary of words and choose/replace the input word
by the one which has highest similarity with it.
\\

The getData() method will load the dataset and tokenize the sentences and then adds them to a set to handle repeated words and returns a list containing all unique words used in the dataset.
\\

At the creation of an object of this type, the object will store all the words used in a dataset by getData method and extend this list of words with nltk's corpus words. this way we ensure that when checking similarity we search, the dataset first and then move onto to in-built corpus of words to make the most similar word specific to this dataset
\\

The createPair() method accepts a parameter word and will create a list contaning two consecutive characters of this word, this will be later used for comparing with another word pair list.
\\

The pairsRatio() method takes two parameters which are two words, this method will create pairs of two words and then keeps a empty common pairs list and adds to this list where any pair appears in both of the word pairs and finally returns a ratio calculated by dividing length of common pairs and maximum length of two-word pairs.
\\

The correctWord() method takes two parameters one being word to check for correction and one being optional threshold to fix the minimum similarity for the selected word from the collection of words. This method keeps track of the word that is most similar to the input word and returns it if greater than fixed threshold else returns the word itself.
\\

Stemming is the process of reducing inflected (or sometimes derived) words to their word stem, base or root form—generally a written word form. The stem need not be identical to the morphological root of the word, it is usually sufficient that related words map to the same stem, even if this stem is not in itself a valid root.
\\

A simple stemmer looks up the inflected form in a lookup table. The advantages of this approach are that it is simple, fast, and easily handles exceptions. The disadvantages are that all inflected forms must be explicitly listed in the table: new or unfamiliar words are not handled, even if they are perfectly regular (e.g. cats ~ cat), and the table may be large. For languages with simple morphology, like English, table sizes are modest, but highly inflected languages like Turkish may have hundreds of potential inflected forms for each root.

In this chatbot for stemming of data we used Snowball Stemmer. It is a stemming algorithm which is also known as the Porter2 stemming algorithm as it is a better version of the Porter Stemmer since some issues of it were fixed in this stemmer.
\\

Tokenization is breaking the raw text into small chunks. Tokenization breaks the raw text into words, sentences called tokens. These tokens help in understanding the context or developing the model for the NLP. The tokenization helps in interpreting the meaning of the text by analyzing the sequence of the words. For example, the text “It is raining” can be tokenized into ‘It’, ‘is’, ‘raining’.
\\

A problem with modeling text is that it is messy, and techniques like machine learning algorithms prefer well defined fixed-length inputs and outputs. Machine learning algorithms cannot work with raw text directly; the text must be converted into numbers. Specifically, vectors of numbers. This is called feature extraction or feature encoding. A popular and simple method of feature extraction with text data is called the bag-of-words model of text. 
\\

The bag-of-words model is a way of representing text data when modeling text with machine learning algorithms. The bag-of-words model is simple to understand and implement and has seen great success in problems such as language modeling and document classification. Any information about the order or structure of words in the document is discarded. The model is only concerned with whether known words occur in the document, not where in the document.
\\

User is asked to enter the area where he would like us to search for service centers and based on it initially 2 service centers. User can still request for more service centers which are sorted on the basis of their distance which  continues until user finds  a nearby center. After doing so user chooses one of the centers displayed where he would like to book an appointment for the next day.
\\

The database in the project stores information about the the service centers and appointments at all service centers. The service center team can then look in the database for those request or appointments getting scheduled and prepare according. The table contains information about user name, laptop make and model, the main problem in 300 ,Service center name, Address and the date of appointment which would be the next day of reporting the problem. This is used to simulate the process of booking of an appointment in real-world scenario.
\\

\subsection{Abbreviations and Acronyms}\label{AA}
Define abbreviations and acronyms the first time they are used in the text, 
even after they have been defined in the abstract. Abbreviations such as 
IEEE, SI, MKS, CGS, ac, dc, and rms do not have to be defined. Do not use 
abbreviations in the title or heads unless they are unavoidable.

\subsection{Units}
\begin{itemize}
\item Use either SI (MKS) or CGS as primary units. (SI units are encouraged.) English units may be used as secondary units (in parentheses). An exception would be the use of English units as identifiers in trade, such as ``3.5-inch disk drive''.
\item Avoid combining SI and CGS units, such as current in amperes and magnetic field in oersteds. This often leads to confusion because equations do not balance dimensionally. If you must use mixed units, clearly state the units for each quantity that you use in an equation.
\item Do not mix complete spellings and abbreviations of units: ``Wb/m\textsuperscript{2}'' or ``webers per square meter'', not ``webers/m\textsuperscript{2}''. Spell out units when they appear in text: ``. . . a few henries'', not ``. . . a few H''.
\item Use a zero before decimal points: ``0.25'', not ``.25''. Use ``cm\textsuperscript{3}'', not ``cc''.)
\end{itemize}

\subsection{Equations}
Number equations consecutively. To make your 
equations more compact, you may use the solidus (~/~), the exp function, or 
appropriate exponents. Italicize Roman symbols for quantities and variables, 
but not Greek symbols. Use a long dash rather than a hyphen for a minus 
sign. Punctuate equations with commas or periods when they are part of a 
sentence, as in:
\begin{equation}
a+b=\gamma\label{eq}
\end{equation}

Be sure that the 
symbols in your equation have been defined before or immediately following 
the equation. Use ``\eqref{eq}'', not ``Eq.~\eqref{eq}'' or ``equation \eqref{eq}'', except at 
the beginning of a sentence: ``Equation \eqref{eq} is . . .''

\subsection{\LaTeX-Specific Advice}

Please use ``soft'' (e.g., \verb|\eqref{Eq}|) cross references instead
of ``hard'' references (e.g., \verb|(1)|). That will make it possible
to combine sections, add equations, or change the order of figures or
citations without having to go through the file line by line.

Please don't use the \verb|{eqnarray}| equation environment. Use
\verb|{align}| or \verb|{IEEEeqnarray}| instead. The \verb|{eqnarray}|
environment leaves unsightly spaces around relation symbols.

Please note that the \verb|{subequations}| environment in {\LaTeX}
will increment the main equation counter even when there are no
equation numbers displayed. If you forget that, you might write an
article in which the equation numbers skip from (17) to (20), causing
the copy editors to wonder if you've discovered a new method of
counting.

{\BibTeX} does not work by magic. It doesn't get the bibliographic
data from thin air but from .bib files. If you use {\BibTeX} to produce a
bibliography you must send the .bib files. 

{\LaTeX} can't read your mind. If you assign the same label to a
subsubsection and a table, you might find that Table I has been cross
referenced as Table IV-B3. 

{\LaTeX} does not have precognitive abilities. If you put a
\verb|\label| command before the command that updates the counter it's
supposed to be using, the label will pick up the last counter to be
cross referenced instead. In particular, a \verb|\label| command
should not go before the caption of a figure or a table.

Do not use \verb|\nonumber| inside the \verb|{array}| environment. It
will not stop equation numbers inside \verb|{array}| (there won't be
any anyway) and it might stop a wanted equation number in the
surrounding equation.

\subsection{Some Common Mistakes}\label{SCM}
\begin{itemize}
\item The word ``data'' is plural, not singular.
\item The subscript for the permeability of vacuum $\mu_{0}$, and other common scientific constants, is zero with subscript formatting, not a lowercase letter ``o''.
\item In American English, commas, semicolons, periods, question and exclamation marks are located within quotation marks only when a complete thought or name is cited, such as a title or full quotation. When quotation marks are used, instead of a bold or italic typeface, to highlight a word or phrase, punctuation should appear outside of the quotation marks. A parenthetical phrase or statement at the end of a sentence is punctuated outside of the closing parenthesis (like this). (A parenthetical sentence is punctuated within the parentheses.)
\item A graph within a graph is an ``inset'', not an ``insert''. The word alternatively is preferred to the word ``alternately'' (unless you really mean something that alternates).
\item Do not use the word ``essentially'' to mean ``approximately'' or ``effectively''.
\item In your paper title, if the words ``that uses'' can accurately replace the word ``using'', capitalize the ``u''; if not, keep using lower-cased.
\item Be aware of the different meanings of the homophones ``affect'' and ``effect'', ``complement'' and ``compliment'', ``discreet'' and ``discrete'', ``principal'' and ``principle''.
\item Do not confuse ``imply'' and ``infer''.
\item The prefix ``non'' is not a word; it should be joined to the word it modifies, usually without a hyphen.
\item There is no period after the ``et'' in the Latin abbreviation ``et al.''.
\item The abbreviation ``i.e.'' means ``that is'', and the abbreviation ``e.g.'' means ``for example''.
\end{itemize}
An excellent style manual for science writers is \cite{b7}.

\subsection{Authors and Affiliations}
\textbf{The class file is designed for, but not limited to, six authors.} A 
minimum of one author is required for all conference articles. Author names 
should be listed starting from left to right and then moving down to the 
next line. This is the author sequence that will be used in future citations 
and by indexing services. Names should not be listed in columns nor group by 
affiliation. Please keep your affiliations as succinct as possible (for 
example, do not differentiate among departments of the same organization).

\subsection{Identify the Headings}
Headings, or heads, are organizational devices that guide the reader through 
your paper. There are two types: component heads and text heads.

Component heads identify the different components of your paper and are not 
topically subordinate to each other. Examples include Acknowledgments and 
References and, for these, the correct style to use is ``Heading 5''. Use 
``figure caption'' for your Figure captions, and ``table head'' for your 
table title. Run-in heads, such as ``Abstract'', will require you to apply a 
style (in this case, italic) in addition to the style provided by the drop 
down menu to differentiate the head from the text.

Text heads organize the topics on a relational, hierarchical basis. For 
example, the paper title is the primary text head because all subsequent 
material relates and elaborates on this one topic. If there are two or more 
sub-topics, the next level head (uppercase Roman numerals) should be used 
and, conversely, if there are not at least two sub-topics, then no subheads 
should be introduced.

\subsection{Figures and Tables}
\paragraph{Positioning Figures and Tables} Place figures and tables at the top and 
bottom of columns. Avoid placing them in the middle of columns. Large 
figures and tables may span across both columns. Figure captions should be 
below the figures; table heads should appear above the tables. Insert 
figures and tables after they are cited in the text. Use the abbreviation 
``Fig.~\ref{fig}'', even at the beginning of a sentence.

\begin{table}[htbp]
\caption{Table Type Styles}
\begin{center}
\begin{tabular}{|c|c|c|c|}
\hline
\textbf{Table}&\multicolumn{3}{|c|}{\textbf{Table Column Head}} \\
\cline{2-4} 
\textbf{Head} & \textbf{\textit{Table column subhead}}& \textbf{\textit{Subhead}}& \textbf{\textit{Subhead}} \\
\hline
copy& More table copy$^{\mathrm{a}}$& &  \\
\hline
\multicolumn{4}{l}{$^{\mathrm{a}}$Sample of a Table footnote.}
\end{tabular}
\label{tab1}
\end{center}
\end{table}

\begin{figure}[htbp]
\centerline{\includegraphics{fig1.png}}
\caption{Example of a figure caption.}
\label{fig}
\end{figure}

Figure Labels: Use 8 point Times New Roman for Figure labels. Use words 
rather than symbols or abbreviations when writing Figure axis labels to 
avoid confusing the reader. As an example, write the quantity 
``Magnetization'', or ``Magnetization, M'', not just ``M''. If including 
units in the label, present them within parentheses. Do not label axes only 
with units. In the example, write ``Magnetization (A/m)'' or ``Magnetization 
\{A[m(1)]\}'', not just ``A/m''. Do not label axes with a ratio of 
quantities and units. For example, write ``Temperature (K)'', not 
``Temperature/K''.

\section*{Acknowledgment}

The preferred spelling of the word ``acknowledgment'' in America is without 
an ``e'' after the ``g''. Avoid the stilted expression ``one of us (R. B. 
G.) thanks $\ldots$''. Instead, try ``R. B. G. thanks$\ldots$''. Put sponsor 
acknowledgments in the unnumbered footnote on the first page.

\section*{References}

Please number citations consecutively within brackets \cite{b1}. The 
sentence punctuation follows the bracket \cite{b2}. Refer simply to the reference 
number, as in \cite{b3}---do not use ``Ref. \cite{b3}'' or ``reference \cite{b3}'' except at 
the beginning of a sentence: ``Reference \cite{b3} was the first $\ldots$''

Number footnotes separately in superscripts. Place the actual footnote at 
the bottom of the column in which it was cited. Do not put footnotes in the 
abstract or reference list. Use letters for table footnotes.

Unless there are six authors or more give all authors' names; do not use 
``et al.''. Papers that have not been published, even if they have been 
submitted for publication, should be cited as ``unpublished'' \cite{b4}. Papers 
that have been accepted for publication should be cited as ``in press'' \cite{b5}. 
Capitalize only the first word in a paper title, except for proper nouns and 
element symbols.

For papers published in translation journals, please give the English 
citation first, followed by the original foreign-language citation \cite{b6}.

\begin{thebibliography}{00}
\bibitem{b1} G. Eason, B. Noble, and I. N. Sneddon, ``On certain integrals of Lipschitz-Hankel type involving products of Bessel functions,'' Phil. Trans. Roy. Soc. London, vol. A247, pp. 529--551, April 1955.
\bibitem{b2} J. Clerk Maxwell, A Treatise on Electricity and Magnetism, 3rd ed., vol. 2. Oxford: Clarendon, 1892, pp.68--73.
\bibitem{b3} I. S. Jacobs and C. P. Bean, ``Fine particles, thin films and exchange anisotropy,'' in Magnetism, vol. III, G. T. Rado and H. Suhl, Eds. New York: Academic, 1963, pp. 271--350.
\bibitem{b4} K. Elissa, ``Title of paper if known,'' unpublished.
\bibitem{b5} R. Nicole, ``Title of paper with only first word capitalized,'' J. Name Stand. Abbrev., in press.
\bibitem{b6} Y. Yorozu, M. Hirano, K. Oka, and Y. Tagawa, ``Electron spectroscopy studies on magneto-optical media and plastic substrate interface,'' IEEE Transl. J. Magn. Japan, vol. 2, pp. 740--741, August 1987 [Digests 9th Annual Conf. Magnetics Japan, p. 301, 1982].
\bibitem{b7} M. Young, The Technical Writer's Handbook. Mill Valley, CA: University Science, 1989.
\end{thebibliography}
\vspace{12pt}
\color{red}
IEEE conference templates contain guidance text for composing and formatting conference papers. Please ensure that all template text is removed from your conference paper prior to submission to the conference. Failure to remove the template text from your paper may result in your paper not being published.

\end{document}
